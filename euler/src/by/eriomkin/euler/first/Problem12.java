package by.eriomkin.euler.first;

/*
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
 */

public class Problem12 {

	public static void main(String[] args) {

		int triangleNumber;
		int naturalNumber;

		naturalNumber = 1;
		triangleNumber = naturalNumber;

		while (true) {

			if (computeDivisors(triangleNumber) == 500) {
				break;
			}
			;
			naturalNumber++;
			triangleNumber += naturalNumber;

		}

	}

	private static int computeDivisors(int number) {
		int quantity;
		StringBuilder str;

		quantity = 0;
		str = new StringBuilder();

		for (int i = number; i > 0; i--) {
			if (number % i == 0) {
				quantity++;
				str.append(i + ", ");

			}
		}
		System.out.println("quantity = " + quantity + ", divisors: " + str);
		return quantity;
	}

}
